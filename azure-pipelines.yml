
trigger:
  branches:
    include:
    - main

variables:
    buildConfiguration: 'Release'

stages:
  - stage: 'Build'
    displayName: 'Build the web application'
    jobs: 
    - job: 'Build'
      displayName: 'Build job'
      pool:
        vmImage: 'ubuntu-18.04'
    
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Restore project dependencies'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
  
      - task: DotNetCoreCLI@2
        displayName: 'Build the project - $(buildConfiguration)'
        inputs:
          command: 'build'
          arguments: './Back-end --no-restore --configuration $(buildConfiguration)'
          projects: '**/*.csproj'
  
      - task: DotNetCoreCLI@2
        displayName: 'Publish the project - $(buildConfiguration)'
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          publishWebProjects: false
          arguments: '--no-build --configuration $(buildConfiguration) --output $(buildConfiguration)'
          zipAfterPublish: true
  
      - publish: '$(buildConfiguration)'
        artifact: drop
  
  - stage: 'Deploy'
    displayName: 'Deploy the web application'
    dependsOn: Build
    jobs:
    - deployment: Deploy
      pool:
        vmImage: 'ubuntu-18.04'
      environment: dev
      variables:
      - group: Release
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
            - task: AzureWebApp@1
              displayName: 'Azure App Service Deploy: website'
              inputs:
                azureSubscription: 'rsimernin'
                appName: 'ComicStore'
                appType: webAppLinux
                package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'